{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","REVERSE","initialGoods","field","order","App","useState","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","isShowReset","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,iBACtBC,EAAiB,SACjBC,EAAU,UAyBhB,IAAMC,EAAe,CAAEC,MAAO,GAAIC,MAAO,IAE5BC,EAAM,WACjB,MAAkCC,mBAASJ,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACMC,EA3BR,SAA0BC,EAAOH,GAC/B,IAAMI,EAAa,YAAOD,GAmB1B,OAjBIH,EAAUJ,OACZQ,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,EAAUJ,OAChB,KAAKJ,EACH,OAAOc,EAAME,cAAcD,GAC7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXT,EAAUH,OACZO,EAAcM,UAGTN,EAOcO,CAAiBpB,EAAiBS,GACjDY,EAAcZ,EAAUJ,OAASI,EAAUH,MAYjD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYf,EAAUJ,QAAUJ,IAElCwB,QAAS,WACPf,EAAa,2BAAKD,GAAN,IAAiBJ,MAAOJ,MANxC,iCAYA,wBACEsB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,EAAUJ,QAAUH,IAElCuB,QAAS,WACPf,EAAa,2BAAKD,GAAN,IAAiBJ,MAAOH,MANxC,4BAYA,wBACEqB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYf,EAAUH,QAAUH,IAElCsB,QA1Cc,WAChBhB,EAAUH,MACZI,EAAa,2BAAKD,GAAN,IAAiBH,MAAO,MAKtCI,EAAa,2BAAKD,GAAN,IAAiBH,MAAOH,MA8BhC,qBAUCkB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMf,EAAaN,IAH9B,sBAUHO,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,UC9GfC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2b32f352.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'alphabetically';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE = 'reverse';\n\nfunction getPreparedGoods(goods, sortField) {\n  const preparedGoods = [...goods];\n\n  if (sortField.field) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField.field) {\n        case SORT_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortField.order) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nconst initialGoods = { field: '', order: '' };\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(initialGoods);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField);\n  const isShowReset = sortField.field || sortField.order;\n\n  const handleReverse = () => {\n    if (sortField.order) {\n      setSortField({ ...sortField, order: '' });\n\n      return;\n    }\n\n    setSortField({ ...sortField, order: REVERSE });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField.field !== SORT_ALPHABETICALLY,\n          })}\n          onClick={() => {\n            setSortField({ ...sortField, field: SORT_ALPHABETICALLY });\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField.field !== SORT_BY_LENGTH,\n          })}\n          onClick={() => {\n            setSortField({ ...sortField, field: SORT_BY_LENGTH });\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': sortField.order !== REVERSE,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {isShowReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setSortField(initialGoods)}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      {visibleGoods.map(good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}